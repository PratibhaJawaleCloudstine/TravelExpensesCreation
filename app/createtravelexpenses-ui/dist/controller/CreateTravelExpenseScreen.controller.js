sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("createtravelexpenses.createtravelexpensesui.controller.CreateTravelExpenseScreen",{onInit(){this.getOwnerComponent().getRouter().getRoute("CreateTravelExpenseScreen").attachPatternMatched(this._onRouteMatched,this);const e={expenses:[],expenseTypes:[{key:"Meals/Snacks",text:"Meals/Snacks"},{key:"Air Travel",text:"Air Travel"},{key:"Laundry",text:"Laundry"},{key:"Rail Travel",text:"Rail Travel"},{key:"Road Travel",text:"Road Travel"},{key:"Alcohol",text:"Alcohol"}]};const t=new sap.ui.model.json.JSONModel(e);this.getOwnerComponent().setModel(t,"expenseModel");const s=new sap.ui.model.json.JSONModel({actionTaken:""});this.getOwnerComponent().setModel(s,"actionModel")},onAddNewExpense:function(){this.byId("expenseTable").setVisible(true);const e=this.getOwnerComponent().getModel("expenseModel");const t=e.getProperty("/expenses")||[];t.push({expenseType:"",receiptAmount:"",receiptDate:""});e.setProperty("/expenses",t);console.log(t)},onEnterReceipts:function(){this.byId("idReceiptEntry").setVisible(true)},onDeleteSelectedExpenses:function(){const e=this.byId("expenseTable");const t=this.getOwnerComponent().getModel("expenseModel");const s=t.getProperty("/expenses")||[];const n=e.getSelectedContexts();if(n.length===0){sap.m.MessageToast.show("Please select at least one entry to delete.");return}const o=n.map(t=>e.getItems().indexOf(t.getObject()));const r=s.filter((e,t)=>!n.some(e=>e.getObject()===s[t]));t.setProperty("/expenses",r);e.removeSelections();const a=t.getProperty("/expenses")||[];const l=a.length>0;this.byId("expenseTable").setVisible(l)},onPreviousStep:function(){var e=sap.ui.core.routing.History.getInstance();var t=e.getPreviousHash();if(t!==undefined){window.history.go(-1)}else{this.getOwnerComponent().getRouter().navTo("RouteReviewTravelRequestScreen",true)}},onReviewTravelRequest:function(){const e=this.getOwnerComponent().getModel("expenseModel");const t=e.getProperty("/expenses")||[];const s=this.getOwnerComponent().getModel("actionModel");s.setProperty("/actionTaken","review");if(t.length>0){this.getOwnerComponent().getRouter().navTo("ReviewTravelExpensesScreen",{travelId:this.travelId})}else{sap.m.MessageToast.show("Please add Travel Expenses.")}},onSaveDraft:function(){const e=this.getOwnerComponent().getModel("expenseModel");const t=e.getProperty("/expenses")||[];const s=this.getOwnerComponent().getModel("actionModel");s.setProperty("/actionTaken","save");console.log("Review expenses");console.log(t);if(t.length>0){t.forEach(e=>{console.log("item");console.log(e);var t=this.getOwnerComponent().getModel();var s=t.bindList("/TravelExpenses",undefined,undefined,undefined,{$$updateGroupId:"travelExpensesGroup"});s.create({travelRequest_ID:this.travelId,expenseType:e.expenseType,receiptAmount:e.receiptAmount,receiptDate:e.receiptDate,currency:"INR"});t.submitBatch("travelExpensesGroup").then(()=>{sap.m.MessageToast.show("Travel Expenses saved successfully.");this.getOwnerComponent().getRouter().navTo("ReviewTravelExpensesScreen",{travelId:this.travelId})}).catch(e=>{sap.m.MessageBox.error("Error saving travel request: "+e.message)}).finally(()=>{this.getView().setBusy(false)})})}else{sap.m.MessageToast.show("Please add Travel Expenses.")}},_onRouteMatched:function(e){this.travelId=e.getParameter("arguments").travelId;const t=this.getOwnerComponent().getModel();const s=t.bindContext(`/TravelRequests(${this.travelId})`);s.requestObject().then(e=>{console.log("Single travel request data:",e);const t=new sap.ui.model.json.JSONModel(e);this.getOwnerComponent().setModel(t,"travelData");console.log(t)}).catch(e=>{console.error("Failed to fetch specific travel request:",e);sap.m.MessageBox.error("Error fetching data.")});const n=this.getOwnerComponent().getModel("expenseModel");const o=n.getProperty("/expenses")||[];if(o.length>0){this.byId("idReceiptEntry").setVisible(true);this.byId("expenseTable").setVisible(true)}else{this.byId("idReceiptEntry").setVisible(false);this.byId("expenseTable").setVisible(false)}},onForwardArrowPress:function(e){const t=e.getSource().getBindingContext("travelData");const s=t.getObject();this.travelId=s.ID;this.getOwnerComponent().getRouter().navTo("CreateTravelExpenseScreen",{travelId:travelId})}})});
//# sourceMappingURL=CreateTravelExpenseScreen.controller.js.map